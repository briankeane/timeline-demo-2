// Mixin to manage responsive breakpoints 
// @param {String} $breakpoint - Breakpoint name
// @require $breakpoints

@mixin respond-to($breakpoint) {
	// If the key exists in the map
	@if map-has-key($breakpoints, $breakpoint) {
		// Prints a media query based on the value
		@media #{inspect(map-get($breakpoints, $breakpoint))} {
			@content;
		}

	} @else {

    	@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        	+ "Available breakpoints are: #{map-keys($breakpoints)}.";
	}
}

@mixin arrow-after() {
	position: relative;
	&:after {
        content: '';
        display: inline-block;
        width: 6px;
        height: 6px;
        border-top: 2px solid;
        border-left: 2px solid;
        transform-origin: 50% 50%;
        position: absolute;
    }
}

@mixin  close-icon($color) {
	&:before,
	&:after {
		position: absolute;
		left: 15px;
		content: ' ';
		height: 20px;
		width: 2px;
		background-color: $color;
	}
	&:before {
		transform: rotate(45deg);
	}
	&:after {
		transform: rotate(-45deg);
	}
}

@mixin square {
  width: 100%;
  position: relative;

  &:after {
    content: "";
    display: block;
    padding-bottom: 100%;
  }

  .square__content {
    position: absolute;
    width: 100%;
    height: 100%;
  }
}